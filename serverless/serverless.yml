service: bod-api

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

custom:
  env: ${file(./.env.json)}

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: ${self:custom.env.AWS_PROFILE}
  region: ${self:custom.env.AWS_REGION}
  stage: ${self:custom.env.ENVIRONMENT}
  environment:
    CLIENT_ID: ${self:custom.env.CLIENT_ID}
    CLIENT_SECRET: ${self:custom.env.CLIENT_SECRET}
    ISSUER: ${self:custom.env.ISSUER}
    UDP_BASE_URL: ${self:custom.env.UDP_BASE_URL}

functions:
  # Authorizer
  oktaAuth:
    handler: src/auth.handler
  signup:
    handler: src/signup.handler
    events:
      - http:
          path: bod/api/signup
          method: post
          cors: true
  register:
    handler: src/subscribe.handler
    events:
      - http:
          path: bod/api/subscribe/{userId}
          method: post
          cors: true
          authorizer:
            name: oktaAuth
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
            resultTtlInSeconds: 0
  video:
    handler: src/video.handler
    events:
      - http:
          path: bod/api/video/{videoId}
          method: get
          cors:
            origin: "*"
            headers: "*"
          authorizer:
            name: oktaAuth
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
            resultTtlInSeconds: 0
  webhook:
    handler: src/stripe.webhook
    events:
      - http:
          path: stripe/webhook
          method: post

